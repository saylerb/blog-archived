{"data":{"markdownRemark":{"html":"<p>You usually don't want to compare strings using the <code class=\"language-text\">==</code> operator.  <a href=\"https://stackoverflow.com/questions/767372/string-equals-versus/767379#767379\">This\nStackOverflow\npost</a>\nprovides a good explaination. TR;DR is that sometimes the <code class=\"language-text\">==</code> will return what\nyou expect, but not always.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\">\n      <pre class=\"language-java\"><code class=\"language-java\">String helloOne <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">;</span>\n\nString helloTwo <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span>\nhelloTwo <span class=\"token operator\">+=</span> <span class=\"token string\">\", World!\"</span>\n\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>helloOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hello, World!\"</span>\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>helloTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hello, World!\"</span>\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>helloOne <span class=\"token operator\">==</span> helloTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>helloOne<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>helloTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre>\n      </div>\n<p>If both strings were initialized as string literals (i.e. they are surrounded\nby <code class=\"language-text\">&quot;</code>), then the comparsion with <code class=\"language-text\">==</code> will work. This is because the Java\ncompiler will represent those strings as the same object in memory. So when in\ndoubt, it's probably a good idea to use <code class=\"language-text\">equals</code>.</p>","frontmatter":{"path":"/comparing-strings-in-java","date":null,"title":"Comparing Strings in Java"}}},"pageContext":{}}