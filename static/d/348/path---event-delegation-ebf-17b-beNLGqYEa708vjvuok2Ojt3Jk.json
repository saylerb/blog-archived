{"data":{"markdownRemark":{"html":"<h3>What is event bubbling? Event capture?</h3>\n<h4>Event bubbling</h4>\n<p>Web browsers need an algorithm for managing events that happen on the DOM.  For\nexample, the browser listens for the user clicking the mouse, and when the\nmouse is clicked, an event is fired off which contains the information about\nthat action (for example, the action was of 'click' type, and what the user\nclicked on). </p>\n<p>Event bubbling describes a behavior of web browsers, where when an event is\nfired, the event cascades up the DOM heirarchy. </p>\n<p>If we picture the DOM as a giant family tree, when something happens to one\nchild, that child tells its parent what happened, and then that parent tells\nits parent, and so on. Any event listeners that are attached DOM elements in\nthe ansestory chain can therefore react to events happening further down the\nfamily tree. This becomes very convienent way of managing behavior happening in\nan application, because it allows for one listener to react to many events.</p>\n<h4>Event capture</h4>\n<h3>How does this tie into event delegation?</h3>\n<p>Event delegation is one way we can take advantage of the way that the browser\nhandles event bubbling. Let's say when you click on an individual element in a\nlist, we want to display the text of the element clicked in a message paragraph\ntag.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Here is a message<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Hi there<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Hello<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Hello again<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>We could add 3 separate event listeners to each item in the list. However, this\ncan become cumbersome, and imagine our list may grow in the future, or we load\nitems dynamically from a database. We would need to loop through all the items\nin the list and add an event listener to every one.</p>\n<p>Taking advantage of how the browser handles event bubbling, you can get the\nsame behavior by adding a single event handler on a common ancestor, which can\nlisten to events that bubble up from its children:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">   <span class=\"token keyword\">const</span> messageElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#list'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> event <span class=\"token operator\">=></span> messageElement<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>Reducing the number of event listeners in your code is a good practice.</p>\n<h3>Further reading</h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\">MDN - Introduction to events</a></li>\n<li><a href=\"https://davidwalsh.name/event-delegate\">How JavaScript Event Delegation Works</a></li>\n</ul>","frontmatter":{"path":"/event-delegation","date":"2018-09-11","title":"What is Event Delegation in JavaScript?"}}},"pageContext":{}}