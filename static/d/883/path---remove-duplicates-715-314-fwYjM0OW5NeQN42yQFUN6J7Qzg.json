{"data":{"markdownRemark":{"html":"<p>I was working on a simple exercise to determine if a word is an isogram, which\nmeans that the word does not have any repeating characters.</p>\n<p>For example, \"flashpoint\" is an isogram, but \"eleven\" is not (it has 3 e's).</p>\n<p>I originally planned to count all the occurrences of each letter, but then I\nthought I actually don't need to capture all the information just to determine\nif there are repeating letters.</p>\n<p>One way to easily de-duplicate a piece of data is to take advantage of a Set,\nwhich is an unordered collection that cannot have duplicates. By taking a\ncollection with duplicates and putting it into a set, we can remove the\nduplicates and then compare lengths of the collections to determine if the\noriginal word had duplicates.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\">\n      <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Arrays<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Set<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span>Collectors<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">IsogramChecker</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">boolean</span> <span class=\"token function\">isIsogram</span><span class=\"token punctuation\">(</span>String phrase<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>phrase<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        String lowerCaseNoDelimiters <span class=\"token operator\">=</span> phrase<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-|\\\\s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> characters <span class=\"token operator\">=</span> lowerCaseNoDelimiters<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Set<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">></span></span> set <span class=\"token operator\">=</span> Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>characters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span>Collectors<span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> set<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> lowerCaseNoDelimiters<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>One thing that Java surprised me with: splitting an empty string on an empty string <code class=\"language-text\">&quot;&quot;</code> returns an non-empty array (<code class=\"language-text\">[&quot;&quot;]</code>)! According to [this StackOverflow post]((<a href=\"https://stackoverflow.com/a/37796531/5252217\">https://stackoverflow.com/a/37796531/5252217</a>), this corner case was explained in the Java documentation at some point, but I could not find it in my Javadoc:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">(Note that the case where the input is itself an empty string is special, as described above, and the limit parameter does not apply there.</code></pre>\n      </div>\n<p>Here, I'm not specifying a limit as the second parameter on <code class=\"language-text\">split()</code> invocation, since it doesn't actually get applied when splitting empty strings.</p>\n<p>My solution to this edge case was to just early return out of the function if an empty string is passed in.</p>\n<p>Check out <a href=\"https://exercism.io/tracks/java/exercises/isogram/solutions/3ab1869f32ae41b8bc3e8eb99c0a94ce\">this solution on exercism.com</a></p>\n<h3>Further reading</h3>\n<ul>\n<li>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#toSet--\">Oracle - Collectors.toSet()</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#replaceAll-java.lang.String-java.lang.String-\">Oracle - String.replaceAll</a></p>\n</li>\n<li>\n<p><a href=\"https://stackoverflow.com/a/37796531/5252217\">StackOverflow - Splitting an empty string</a></p>\n</li>\n</ul>","frontmatter":{"path":"/remove-duplicates","date":"2018-11-04","title":"Removing duplicates from a string"}}},"pageContext":{}}