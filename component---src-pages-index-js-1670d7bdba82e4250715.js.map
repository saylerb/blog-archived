{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","default","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_3__","StaticQuery","query","render","data","allMarkdownRemark","edges","map","edge","console","log","node","key","id","Link","to","frontmatter","path","title","_public_static_d_3543273525_json__WEBPACK_IMPORTED_MODULE_1__","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","props","Consumer","staticQueryData","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","header","_ref","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","layout_Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","paddingTop","_755544856","prop_types_default","239","e","t","240","r","n","i","o","s","l","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","u","241","248","date","excerpt","timeToRead","html"],"mappings":"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","file":"component---src-pages-index-js-1670d7bdba82e4250715.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nconst IndexPage = () => (\n  <Layout>\n    <h1>Hi there</h1>\n    <p>Welcome to my personal site.</p>\n    <StaticQuery\n      query={graphql`\n        query BlogPostQuery {\n          allMarkdownRemark {\n            edges {\n              node {\n                id\n                frontmatter {\n                  path\n                  title\n                  date\n                }\n                excerpt\n                timeToRead\n                html\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <ul>\n            {data.allMarkdownRemark.edges.map(edge => {\n              console.log(\"Path:\", edge.node);\n              return (\n                <li key={edge.node.id}>\n                  <Link to={edge.node.frontmatter.path}>\n                    {edge.node.frontmatter.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        );\n      }}\n    />\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: \"rebeccapurple\",\n      marginBottom: \"1.45rem\"\n    }}\n  >\n    <div\n      style={{\n        margin: \"0 auto\",\n        maxWidth: 960,\n        padding: \"1.45rem 1.0875rem\"\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: \"white\",\n            textDecoration: \"none\"\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: \"description\", content: \"Sample\" },\n            { name: \"keywords\", content: \"sample, something\" }\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: \"0 auto\",\n            maxWidth: 960,\n            padding: \"0px 1.0875rem 1.45rem\",\n            paddingTop: 0\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}