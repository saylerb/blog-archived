{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","default","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_2__","StaticQuery","query","render","data","allMarkdownRemark","edges","map","edge","key","node","id","frontmatter","date","Link","to","path","title","_public_static_d_534343722_json__WEBPACK_IMPORTED_MODULE_0__","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","props","Consumer","staticQueryData","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","ProdPageRenderer","_ref","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","c","237","e","t","239","n","o","i","l","r","s","u","header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","layout_Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","paddingTop","_755544856","prop_types_default","h","273","excerpt","timeToRead","html"],"mappings":"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","file":"component---src-pages-index-js-0ac62760db434a648289.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nconst IndexPage = () => (\n  <Layout>\n    <h1>Hi there</h1>\n    <p>Welcome to my personal site!</p>\n    <StaticQuery\n      query={graphql`\n        query BlogPostQuery {\n          allMarkdownRemark(\n            filter: { frontmatter: { published: { eq: true } } }\n          ) {\n            edges {\n              node {\n                id\n                frontmatter {\n                  path\n                  title\n                  date\n                }\n                excerpt\n                timeToRead\n                html\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <ul>\n            {data.allMarkdownRemark.edges.map(edge => {\n              return (\n                <li key={edge.node.id}>\n                  <span>\n                    {edge.node.frontmatter.date} </span>\n                  <Link to={edge.node.frontmatter.path}>\n                    {edge.node.frontmatter.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        );\n      }}\n    />\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: \"rebeccapurple\",\n      marginBottom: \"1.45rem\"\n    }}\n  >\n    <div\n      style={{\n        margin: \"0 auto\",\n        maxWidth: 960,\n        padding: \"1.45rem 1.0875rem\"\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: \"white\",\n            textDecoration: \"none\"\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: \"description\", content: \"Sample\" },\n            { name: \"keywords\", content: \"sample, something\" }\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: \"0 auto\",\n            maxWidth: 960,\n            padding: \"0px 1.0875rem 1.45rem\",\n            paddingTop: 0\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}